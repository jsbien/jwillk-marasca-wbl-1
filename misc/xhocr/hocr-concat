#!/usr/bin/python
# encoding=UTF-8

# Copyright Â© 2013 Jakub Wilk <jwilk@jwilk.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 dated June, 1991.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.

'''
hocr-merge concatenates two or more hOCR files into a multi-page hOCR file.

The new <head> is copied from the first file;
The new <body> is a concatenation of all <body> elements.

Only hOCR files generated by Tesseract >= 3.02 are supported.
'''

import argparse
import hocr
import sys

import xmlutils

hocr_top = '''\
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="{xhtml}">
<head>\
'''.format(xhtml=xmlutils.namespaces['xhtml'])

hocr_middle = '''\
</head>
<body>\
'''

hocr_bottom = '''\
</body>
</html>
'''

def remove_ids(elem):
    # concatenating could cause duplicate identifiers, so remove them all
    for e in elem.iter():
        try:
            del e.attrib['id']
        except LookupError:
            continue

def main():
    ap = argparse.ArgumentParser(description=__doc__.strip())
    ap.add_argument('files', metavar='HOCR-FILE', nargs='+', help='hOCR files to merge')
    options = ap.parse_args()
    try:
        tree = hocr.parse(options.files[0])
    except hocr.XMLSyntaxError:
        sys.exit(1)
    head = tree.find('xhtml:head', namespaces=xmlutils.namespaces)
    sys.stdout.write(hocr_top)
    sys.stdout.write(xmlutils.elem_inside_to_string(head))
    sys.stdout.write(hocr_middle)
    for i, path in enumerate(options.files):
        if i > 0:
            try:
                tree = hocr.parse(path)
            except hocr.XMLSyntaxError:
                sys.exit(1)
            remove_ids(tree)
        body = tree.find('xhtml:body', namespaces=xmlutils.namespaces)
        sys.stdout.write(xmlutils.elem_inside_to_string(body, encoding='UTF-8'))
    sys.stdout.write(hocr_bottom)

if __name__ == '__main__':
    main()

# vim:ts=4 sw=4 et
